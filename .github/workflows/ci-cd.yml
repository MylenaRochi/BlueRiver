name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package --file pom.xml

      - name: Build Docker image
        run: docker build -t mylenarochi/blueriver:${{ github.sha }} .

      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push your-dockerhub-username/your-app-name:${{ github.sha }}

  deploy_staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'

    steps:
      - name: Deploy to Staging Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_HOST }} << 'EOF'
          docker pull mylenarochi/blueriver:${{ github.sha }}
          docker stop app_container || true
          docker rm app_container || true
          docker run -d --name app_container -p 8080:8080 mylenarochi/blueriver:${{ github.sha }}
          EOF

  deploy_production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to Production Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.PRODUCTION_USER }}@${{ secrets.PRODUCTION_HOST }} << 'EOF'
          docker pull mylenarochi/blueriver:${{ github.sha }}
          docker stop app_container || true
          docker rm app_container || true
          docker run -d --name app_container -p 8080:8080 mylenarochi/blueriver:${{ github.sha }}
          EOF